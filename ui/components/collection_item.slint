import { Button, CheckBox, HorizontalBox, VerticalBox } from "std-widgets.slint";
import { AppConfig, CollectionItemActive } from "../global.slint";
import { Theme } from "../theme.slint";


export component CollectionComponent inherits Rectangle {
    in property <string> name;
    in property <string> id;
    in property <color> component_background;
    in property <image> icon;
    in property <int> index;
    in property <string> icon_name;

    height: 40px;
    touch-area := TouchArea {}
    background: touch-area.has-hover ? component_background.darker(20%) : AppConfig.active_collection_item.index == index ? component_background.darker(20%) : component_background;
    border-width: Theme.hover_border_width;

    HorizontalLayout {
        alignment: space-between;
        padding-top: 5px;
        padding-bottom: 5px;
        padding-left: 10px;
        padding-right: 10px;
        spacing: 10px;


        Rectangle {
            width: Theme.icon_box_with;
            height: Theme.icon_box_with;
            background: touch.has-hover ? Theme.hover_color : root.background;
            border-radius: Theme.border_radius;

            touch := TouchArea{
                mouse-cursor: self.has-hover ? pointer : default;
                clicked => {
                    AppConfig.active_collection_item = {
                        id: id,
                        name: name,
                        index: index,
                        x: root.x + root.width,
                        y: root.y + root.height
                    };
                    AppConfig.show_icons_popup = !AppConfig.show_icons_popup;
                }
            }

            Image {
                source: icon;
                width: Theme.icon_box_with - 2px;
                height: Theme.icon_box_with - 2px;
            }
        }

        if AppConfig.active_collection_rename_mode == true && AppConfig.active_collection_item.index == index :
            text_input := TextInput {
                color: Theme.label_text_color;
                horizontal-stretch: 1;
                vertical-alignment: center;
                wrap: no-wrap;
                single-line: true;
                text: name;
                font-size: Theme.label_font_size_medium_small;
                accepted() => {
                    if self.text != "" {
                        AppConfig.update_collection(id, self.text, icon_name, index);
                    }
                    AppConfig.active_collection_rename_mode = false;
                }

                init => {
                    // Give focus to text box
                    self.focus();
                    self.select-all();
                }

            }
            

        // Conditionally display the Text
        if !(AppConfig.active_collection_rename_mode == true && AppConfig.active_collection_item.index == index) :
            text := Text {
                vertical-alignment: center;
                text: name;
                font-size: Theme.label_font_size_medium_small;
                color: Theme.label_text_color;

                max-width: 200px;
                wrap: TextWrap.no-wrap;
                overflow: TextOverflow.elide;
            }

        more_btn := Rectangle {
            width: Theme.icon_box_with;
            height: Theme.icon_box_with;
            background: more_touch.has-hover ? Theme.hover_color : root.background;
            border-radius: Theme.border_radius;

            more_touch := TouchArea{
                mouse-cursor: self.has-hover ? pointer : default;
                property<length> position_x;
                property<length> position_y;

                clicked => {
                    position_x = root.x + root.width;
                    position_y = (index * root.height) + AppConfig.collections_viewport_y;

                    AppConfig.active_collection_item = {
                        id: id,
                        name: name,
                        index: index,
                        x: position_x,
                        y: position_y
                    };

                    AppConfig.show_collection_more_dropdown = !AppConfig.show_collection_more_dropdown;
                }   
            }
            more := Image {
                source: @image-url("../icons/more.svg");
                colorize: Theme.icon_color;
            }
        }
        
    }
}    