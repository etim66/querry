
import { Theme } from "../theme.slint";
import { AppConfig, CollectionItemActive } from "../global.slint";

import { GridView } from "./gridview.slint";
import { ScrollView } from "std-widgets.slint";


export component IconsPopup inherits Rectangle {
    width: 600px;
    height: 500px;
    background: Theme.popup_background_dim_color;
    visible: AppConfig.show_icons_popup;
    border-radius: Theme.border_radius;

    TouchArea {
        clicked => {
            AppConfig.show_icons_popup = false;
        }
    }

    child := Rectangle {
        width: root.width - 5px;
        height: root.height - 5px;
        padding-top: 15px;
        padding-bottom: 15px;
        z: 100;
        clip: true;

        background: Theme.popup_background_color;
        border-color: Theme.border_color;
        border-radius: Theme.border_radius;
        border-width: Theme.border_width;

        // to block clicks going to the TouchArea underneath
        TouchArea { }

        VerticalLayout {
            height: 100%;
            HorizontalLayout {
                horizontal-stretch: 1;

                Rectangle {
                    horizontal-stretch: 1;
                    height: 40px;
                    Text {
                        text: "Select icon";
                        color: Theme.label_text_color;
                        font-size: Theme.label_font_size_medium;
                    }

                    Image {
                        source: @image-url("../icons/close.svg");
                        colorize: Theme.icon_color;
                        width: 24px;
                        height: 24px;
                        x: parent.width - self.width - 10px;
                        opacity: close_touch.pressed ? 0.7 : 1.0;

                        close_touch := TouchArea {
                            mouse-cursor: self.has-hover ? pointer : default;
                            clicked => {
                                AppConfig.show_icons_popup = false;
                                AppConfig.active_collection_item = {
                                    name: "",
                                    id: "",
                                    index: -1
                                };
                            }
                        }
                    }
                }
            }

            Rectangle {
                width: parent.width;
                height: 1px;
                background: Theme.border_color;
            }
        
            Rectangle {
                vertical-stretch: 1;

                view := GridView {
                    viewport-height: Math.round(AppConfig.icons.length / self.columns) * self.preferred_cell_height * 1px;
                    viewport-width: parent.width;

                    for icon[index] in AppConfig.icons: Rectangle {
                        width: view.expected_width * 1px;
                        height: view.preferred_cell_height * 1px;
                        x: (Math.mod(index, view.columns)) * self.width ;
                        y: Math.floor(index / view.columns) * self.height;
                        background: touch.has-hover ? Theme.hover_color : Theme.app_background_color;
                        border-radius: Theme.border_radius;
                        
                        
                        Image {
                            source: icon.image;
                            width: 100%;
                            height: 100%;
                        }

                        touch := TouchArea {
                            mouse-cursor: self.has-hover ? pointer : default;
                            clicked => {
                                AppConfig.update_collection(
                                    AppConfig.active_collection_item.id,
                                    AppConfig.active_collection_item.name,
                                    icon.name,
                                    AppConfig.active_collection_item.index
                                );
                                AppConfig.show_icons_popup = false;
                                AppConfig.active_collection_item = {
                                    name: "",
                                    id: "",
                                    index: -1
                                };
                            }
                        }
                    }
                }
            }

            
        }
    }
}
