import { Theme } from "../../theme.slint";
import { AppConfig } from "../../global.slint";
import { RequestsFormComponent } from "./requests_form.slint";
import { HeadersComponent } from "./header.slint";
import { AuthorizationComponent } from "./authorization.slint";


export component BaseRequests inherits Rectangle {
    in-out property <string> active_tab: "Headers";
    in-out property <length> underline_start;
    in-out property <length> underline_width;
    background: Theme.dark_theme ? Theme.app_background_color.darker(-30%) : Theme.app_background_color.darker(30%);

    VerticalLayout {
        form_component := RequestsFormComponent {
            height: 55px;
        }

        Rectangle {
            width: 100%;
            height: 1px;
            border-color: Theme.border_color;
            border-width: 1px;
        }

        HorizontalLayout {
            spacing: 15px;
            height: 35px;
            alignment: start;
            padding-bottom: 3px;
            


            label_headers := HorizontalLayout {
                padding-left: 14px;
                headers := Text {
                    text: "Headers";
                    color: Theme.label_text_color;
                    font-size: Theme.label_font_size_medium_small;
                    opacity: root.active_tab == self.text ? 1 : Theme.text_opacity;
                    vertical-alignment: TextVerticalAlignment.bottom;

                    TouchArea {
                        clicked => {
                            root.active_tab = headers.text;
                            root.underline_start = parent.x - 2px;
                            root.underline_width = parent.width + 2px;
                        }
                    }

                    init => {
                        root.underline_start = self.x;
                        root.underline_width = self.width + 2px;
                    }
                }

                Text {
                    text: " (\{AppConfig.request_item_headers.length})";
                    color: green;
                    font-size: Theme.label_font_size_medium_small;
                    opacity: root.active_tab == headers.text ? 1 : Theme.text_opacity;
                    vertical-alignment: TextVerticalAlignment.bottom;
                }

            }

            label_body := Text {
                text: "Body";
                color: Theme.label_text_color;
                font-size: Theme.label_font_size_medium_small;
                opacity: root.active_tab == self.text ? 1 : Theme.text_opacity;
                vertical-alignment: TextVerticalAlignment.bottom;

                TouchArea {
                    clicked => {
                        root.active_tab = parent.text;
                        root.underline_start = parent.x - 2px;
                        root.underline_width = parent.width + 2px;
                    }
                }
            }

            label_auth := Text {
                text: "Auth";
                color: Theme.label_text_color;
                font-size: Theme.label_font_size_medium_small;
                opacity: root.active_tab == self.text ? 1 : Theme.text_opacity;
                vertical-alignment: TextVerticalAlignment.bottom;

                TouchArea {
                    clicked => {
                        root.active_tab = parent.text;
                        root.underline_start = parent.x - 2px;
                        root.underline_width = parent.width + 2px;
                    }
                }
            }
        }

        Rectangle {
            width: root.underline_width;
            x: root.underline_start;
            border-color: blue;
            border-width: 2px;
            height: 1px;
        }


        Rectangle {
            width: 100%;
            height: 1px;
            border-color: Theme.border_color;
            border-width: 1px;
        }

        if (root.active_tab == "Headers"):
            HeadersComponent {vertical-stretch: 1;}
        
        if (root.active_tab == "Auth"):
            AuthorizationComponent {vertical-stretch: 2; height: 100%;}
    }
}