import { ListView } from "std-widgets.slint";

import { Theme } from "../theme.slint";
import {SearchForm} from "./forms.slint";
import { IconButton } from "./buttons.slint";
import { AppConfig, CollectionItem} from "../global.slint";
import { CollectionComponent } from "./collection_item.slint";
import { BaseButton } from "./buttons.slint";


component CreateCollectionsButton inherits BaseButton {
    Text {
        text: "Add";
        font-size: Theme.label_font_size_medium_small;
        color: Theme.label_text_color;
    }
}


export component CollectionSection inherits Rectangle {
    border-color: Theme.border_color;
    vertical-stretch: 1;
    border-width: Theme.border_width;
    clip: true;
    in-out property <[CollectionItem]> collection_items: AppConfig.collection_items;
    background: Theme.dark_theme ? Theme.app_background_color.darker(-30%) : Theme.app_background_color.darker(30%);

    init => {
        AppConfig.active_collection_item = {
            name: "",
            id: "",
            index: -1,
            x:-1px,
            y:-1px
        };
    }

    VerticalLayout { 
        padding-bottom: 8px;
        padding-top: 8px;
        padding-left: 5px;
        padding-right: 5px;

        HorizontalLayout {
            horizontal-stretch: 1;
            alignment: LayoutAlignment.end;
            padding-right: 5px;

            Rectangle {
                width: Theme.icon_box_with;
                height: Theme.icon_box_with;
                background: touch.has-hover ? Theme.hover_color : root.background;
                border-radius: Theme.border_radius;
                        
                image := Image {
                    source: @image-url("../icons/create_folder.svg");
                    colorize: Theme.icon_color;
                }

                touch := TouchArea {
                    mouse-cursor: self.has-hover ? pointer : default;
                    clicked => {
                        AppConfig.create_collection();
                    }
                }
            }
        }

        
        if collection_items.length > 0:

            VerticalLayout {
                vertical-stretch: 1;
                ListView {
                    
                    for list_item[i] in collection_items: CollectionComponent {
                        name: list_item.name;
                        id: list_item.id;
                        component_background: root.background;
                        icon: list_item.icon;
                        index: i;
                        icon_name: list_item.icon_name;
                        request_count: list_item.request_count;
                    }

                    changed viewport-y => {
                        AppConfig.collections_viewport_y = self.viewport-y;

                        // Close requests pane if the user scrolls  - TODO
                        // AppConfig.show_request_more_dropdown = false;
                        // AppConfig.active_request_item = {
                        //     name: "",
                        //     id: "",
                        //     index: -1,
                        //     x:-1px,
                        //     y:-1px,
                        //     collection_index: -1
                        // };  
                        // AppConfig.show_active_collection_requests = false;
                    }

                }

            }
            
        if collection_items.length == 0:

            VerticalLayout {
                vertical-stretch: 1;
                alignment: center;
                spacing: 20px;
                width: 100%;

                Image {
                    source: @image-url("../icons/empty.svg");
                    // opacity: 0.7;         
                    x: (parent.width - self.width) / 2;
                    width: 300px;
                }
                Text {
                    padding-top: 10px;
                    text: "No collections found.";
                    font-size: Theme.label_font_size_medium_small;
                    color: Theme.label_text_color;
                    horizontal-alignment: center;
                    opacity: Theme.text_opacity;
                }

                CreateCollectionsButton {
                    x: (parent.width - self.width) / 2;

                    TouchArea {
                        mouse-cursor: self.has-hover ? pointer : default;
                        clicked => {
                            AppConfig.create_collection();
                        }
                    }
                }
            }

        SearchForm {
            height: 30px;
        }
    }
}